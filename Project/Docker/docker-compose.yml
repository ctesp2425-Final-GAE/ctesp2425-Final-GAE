version: '3.8'

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_server
    ports:
      - "1434:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "yourStrong(!)Password"
      MSSQL_PID: "Evaluation"
    networks:
      - bridgeRestaurant
    volumes:
      - sql_data:/var/opt/mssql

  # restaurant-api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: restaurant-api
  #   environment:
  #       - DefaultConnection=Server=mssql;Database=RestaurantReservations;User Id=sa;Password=yourStrong(!)Password;
  #   ports:
  #     - "8050:8080"
  #   depends_on:
  #     - mssql
  #   networks:
  #     - bridgeRestaurant

  postgres:
    image: postgres:14
    container_name: sonarqube_postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sonarqube_net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9001:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - postgres
    networks:
      - sonarqube_net

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - bridgeRestaurant

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - portainer_net

networks:
  bridgeRestaurant:
    driver: bridge
  sonarqube_net:
    driver: bridge
  portainer_net:
    driver: bridge

volumes:
  sql_data:
  postgres_data:
  jenkins_home:
  portainer_data: